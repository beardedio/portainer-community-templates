[
  {
    "type": "container",
    "title": "Registry",
    "description": "Docker image registry",
    "categories": [
      "docker"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
    "image": "registry:latest",
    "ports": [
      "5000/tcp"
    ],
    "volumes": [
      "/var/lib/registry"
    ]
  },
  {
    "type": "container",
    "title": "Nginx",
    "description": "High performance web server",
    "categories": [
      "webserver"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
    "image": "nginx:latest",
    "ports": [
      "80/tcp",
      "443/tcp"
    ],
    "volumes": [
      "/etc/nginx",
      "/usr/share/nginx/html"
    ]
  },
  {
    "type": "container",
    "title": "Httpd",
    "description": "Open-source HTTP server",
    "categories": [
      "webserver"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
    "image": "httpd:latest",
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/usr/local/apache2/htdocs/"
    ]
  },
  {
    "type": "container",
    "title": "Caddy",
    "description": "HTTP/2 web server with automatic HTTPS",
    "categories": [
      "webserver"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
    "image": "abiosoft/caddy:latest",
    "ports": [
      "80/tcp",
      "443/tcp",
      "2015/tcp"
    ],
    "volumes": [
      "/root/.caddy"
    ]
  },
  {
    "type": "container",
    "title": "MySQL",
    "description": "The most popular open-source database",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
    "image": "mysql:latest",
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "Root password"
      }
    ],
    "ports": [
      "3306/tcp"
    ],
    "volumes": [
      "/var/lib/mysql"
    ]
  },
  {
    "type": "container",
    "title": "MariaDB",
    "description": "Performance beyond MySQL",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mariadb.png",
    "image": "mariadb:latest",
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "Root password"
      }
    ],
    "ports": [
      "3306/tcp"
    ],
    "volumes": [
      "/var/lib/mysql"
    ]
  },
  {
    "type": "container",
    "title": "PostgreSQL",
    "description": "The most advanced open-source database",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
    "image": "postgres:latest",
    "env": [
      {
        "name": "POSTGRES_USER",
        "label": "Superuser"
      },
      {
        "name": "POSTGRES_PASSWORD",
        "label": "Superuser password"
      }
    ],
    "ports": [
      "5432/tcp"
    ],
    "volumes": [
      "/var/lib/postgresql/data"
    ]
  },
  {
    "type": "container",
    "title": "Mongo",
    "description": "Open-source document-oriented database",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
    "image": "mongo:latest",
    "ports": [
      "27017/tcp"
    ],
    "volumes": [
      "/data/db"
    ]
  },
  {
    "type": "container",
    "title": "CockroachDB",
    "description": "An open-source, survivable, strongly consistent, scale-out SQL database",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
    "image": "cockroachdb/cockroach:latest",
    "ports": [
      "26257/tcp",
      "8080/tcp"
    ],
    "volumes": [
      "/cockroach/cockroach-data"
    ],
    "command": "start --insecure"
  },
  {
    "type": "container",
    "title": "CrateDB",
    "description": "An open-source distributed SQL database",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
    "image": "crate:latest",
    "ports": [
      "4200/tcp",
      "4300/tcp"
    ],
    "volumes": [
      "/data"
    ]
  },
  {
    "type": "container",
    "title": "Elasticsearch",
    "description": "Open-source search and analytics engine",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
    "image": "elasticsearch:latest",
    "ports": [
      "9200/tcp",
      "9300/tcp"
    ],
    "volumes": [
      "/usr/share/elasticsearch/data"
    ]
  },
  {
    "type": "container",
    "title": "Gitlab CE",
    "description": "Open-source end-to-end software development platform",
    "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
    "categories": [
      "development",
      "project-management"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
    "image": "gitlab/gitlab-ce:latest",
    "ports": [
      "80/tcp",
      "443/tcp",
      "22/tcp"
    ],
    "volumes": [
      {
        "container": "/etc/gitlab"
      },
      {
        "container": "/var/log/gitlab"
      },
      {
        "container": "/var/opt/gitlab"
      }
    ]
  },
  {
    "type": "container",
    "title": "Minio",
    "description": "A distributed object storage server built for cloud applications and devops",
    "categories": [
      "storage"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
    "image": "minio/minio:latest",
    "ports": [
      "9000/tcp"
    ],
    "env": [
      {
        "name": "MINIO_ACCESS_KEY",
        "label": "Minio access key"
      },
      {
        "name": "MINIO_SECRET_KEY",
        "label": "Minio secret key"
      }
    ],
    "volumes": [
      "/data",
      "/root/.minio"
    ],
    "command": "server /data"
  },
  {
    "type": "container",
    "title": "Scality S3",
    "description": "Standalone AWS S3 protocol server",
    "categories": [
      "storage"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
    "image": "scality/s3server",
    "ports": [
      "8000/tcp"
    ],
    "env": [
      {
        "name": "SCALITY_ACCESS_KEY",
        "label": "Scality S3 access key"
      },
      {
        "name": "SCALITY_SECRET_KEY",
        "label": "Scality S3 secret key"
      }
    ],
    "volumes": [
      "/usr/src/app/localData",
      "/usr/src/app/localMetadata"
    ]
  },
  {
    "type": "container",
    "title": "SQL Server",
    "description": "Microsoft SQL Server on Linux",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
    "image": "microsoft/mssql-server-linux:2017-GA",
    "ports": [
      "1433/tcp"
    ],
    "env": [
      {
        "name": "ACCEPT_EULA",
        "set": "Y"
      },
      {
        "name": "SA_PASSWORD",
        "label": "SA password"
      }
    ]
  },
  {
    "type": "container",
    "title": "SQL Server",
    "description": "Microsoft SQL Server Developer for Windows containers",
    "categories": [
      "database"
    ],
    "platform": "windows",
    "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
    "image": "microsoft/mssql-server-windows-developer:latest",
    "ports": [
      "1433/tcp"
    ],
    "env": [
      {
        "name": "ACCEPT_EULA",
        "set": "Y"
      },
      {
        "name": "sa_password",
        "label": "SA password"
      }
    ],
    "volumes": [
      "C:/temp/"
    ]
  },
  {
    "type": "container",
    "title": "SQL Server Express",
    "description": "Microsoft SQL Server Express for Windows containers",
    "categories": [
      "database"
    ],
    "platform": "windows",
    "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
    "image": "microsoft/mssql-server-windows-express:latest",
    "ports": [
      "1433/tcp"
    ],
    "env": [
      {
        "name": "ACCEPT_EULA",
        "set": "Y"
      },
      {
        "name": "sa_password",
        "label": "SA password"
      }
    ],
    "volumes": [
      "C:/temp/"
    ]
  },
  {
    "type": "container",
    "title": "IronFunctions API",
    "description": "Open-source serverless computing platform",
    "categories": [
      "serverless"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
    "image": "iron/functions:latest",
    "ports": [
      "8080/tcp"
    ],
    "volumes": [
      "/app/data"
    ],
    "privileged": true
  },
  {
    "type": "container",
    "title": "IronFunctions UI",
    "description": "Open-source user interface for IronFunctions",
    "categories": [
      "serverless"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
    "image": "iron/functions-ui:latest",
    "ports": [
      "4000/tcp"
    ],
    "volumes": [
      "/app/data"
    ],
    "env": [
      {
        "name": "API_URL",
        "label": "API URL"
      }
    ],
    "privileged": true
  },
  {
    "type": "container",
    "title": "Solr",
    "description": "Open-source enterprise search platform",
    "categories": [
      "search-engine"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
    "image": "solr:latest",
    "ports": [
      "8983/tcp"
    ],
    "volumes": [
      "/opt/solr/mydata"
    ]
  },
  {
    "type": "container",
    "title": "Redis",
    "description": "Open-source in-memory data structure store",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
    "image": "redis:latest",
    "ports": [
      "6379/tcp"
    ],
    "volumes": [
      "/data"
    ]
  },
  {
    "type": "container",
    "title": "RabbitMQ",
    "description": "Highly reliable enterprise messaging system",
    "categories": [
      "messaging"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
    "image": "rabbitmq:latest",
    "ports": [
      "5671/tcp",
      "5672/tcp"
    ],
    "volumes": [
      "/var/lib/rabbitmq"
    ]
  },
  {
    "type": "container",
    "title": "Ghost",
    "description": "Free and open-source blogging platform",
    "categories": [
      "blog"
    ],
    "note": "Access the blog management interface under <code>/ghost/</code>.",
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
    "image": "ghost:latest",
    "ports": [
      "2368/tcp"
    ],
    "volumes": [
      "/var/lib/ghost/content"
    ]
  },
  {
    "type": "container",
    "title": "Plesk",
    "description": "WebOps platform and hosting control panel",
    "categories": [
      "CMS"
    ],
    "platform": "linux",
    "note": "Default credentials: admin / changeme",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plesk.png",
    "image": "plesk/plesk:preview",
    "ports": [
      "21/tcp",
      "80/tcp",
      "443/tcp",
      "8880/tcp",
      "8443/tcp",
      "8447/tcp"
    ]
  },
  {
    "type": "container",
    "title": "WordPress",
    "description": "A free and open-source CMS",
    "categories": [
      "CMS"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
    "image": "wordpress:latest",
    "env": [
      {
        "name": "WORDPRESS_DB_HOST",
        "label": "MySQL database host",
        "type": "container"
      },
      {
        "name": "WORDPRESS_DB_PASSWORD",
        "label": "Database password"
      }
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/var/www/html"
    ]
  },
  {
    "type": "container",
    "title": "Joomla",
    "description": "Another free and open-source CMS",
    "categories": [
      "CMS"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
    "image": "joomla:latest",
    "env": [
      {
        "name": "JOOMLA_DB_HOST",
        "label": "MySQL database host",
        "type": "container"
      },
      {
        "name": "JOOMLA_DB_PASSWORD",
        "label": "Database password"
      }
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/var/www/html"
    ]
  },
  {
    "type": "container",
    "title": "Drupal",
    "description": "Open-source content management framework",
    "categories": [
      "CMS"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
    "image": "drupal:latest",
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/var/www/html"
    ]
  },
  {
    "type": "container",
    "title": "Plone",
    "description": "A free and open-source CMS built on top of Zope",
    "categories": [
      "CMS"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
    "image": "plone:latest",
    "ports": [
      "8080/tcp"
    ],
    "volumes": [
      "/data"
    ]
  },
  {
    "type": "container",
    "title": "Magento 2",
    "description": "Open-source e-commerce platform",
    "categories": [
      "CMS"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/magento.png",
    "image": "alankent/gsd:latest",
    "ports": [
      "80/tcp",
      "3000/tcp",
      "3001/tcp"
    ],
    "volumes": [
      "/var/www/html/"
    ]
  },
  {
    "type": "container",
    "title": "Sematext Docker Agent",
    "description": "Collect logs, metrics and docker events",
    "categories": [
      "Log Management",
      "Monitoring"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
    "image": "sematext/sematext-agent-docker:latest",
    "name": "sematext-agent",
    "privileged": true,
    "env": [
      {
        "name": "LOGSENE_TOKEN",
        "label": "Logs token"
      },
      {
        "name": "SPM_TOKEN",
        "label": "SPM monitoring token"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ]
  },
  {
    "type": "container",
    "title": "Mautic",
    "description": "Open-source marketing automation platform",
    "categories": [
      "marketing"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
    "image": "mautic/mautic:latest",
    "env": [
      {
        "name": "MAUTIC_DB_HOST",
        "label": "MySQL database host",
        "type": "container"
      },
      {
        "name": "MAUTIC_DB_PASSWORD",
        "label": "Database password"
      }
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/var/www/html"
    ]
  },
  {
    "type": "container",
    "title": "Wowza",
    "description": "Streaming media server",
    "categories": [
      "streaming"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wowza.png",
    "image": "sameersbn/wowza:4.1.2-8",
    "env": [
      {
        "name": "WOWZA_ACCEPT_LICENSE",
        "label": "Agree to Wowza EULA",
        "set": "yes"
      },
      {
        "name": "WOWZA_KEY",
        "label": "License key"
      }
    ],
    "ports": [
      "1935/tcp",
      "8086/tcp",
      "8087/tcp",
      "8088/tcp"
    ],
    "volumes": [
      "/var/lib/wowza"
    ]
  },
  {
    "type": "container",
    "title": "Jenkins",
    "description": "Open-source continuous integration tool",
    "categories": [
      "continuous-integration"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
    "image": "jenkins/jenkins:lts",
    "ports": [
      "8080/tcp",
      "50000/tcp"
    ],
    "env": [
      {
        "name": "JENKINS_OPTS",
        "label": "Jenkins options"
      }
    ],
    "volumes": [
      "/var/jenkins_home"
    ]
  },
  {
    "type": "container",
    "title": "Redmine",
    "description": "Open-source project management tool",
    "categories": [
      "project-management"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
    "image": "redmine:latest",
    "ports": [
      "3000/tcp"
    ],
    "volumes": [
      "/usr/src/redmine/files"
    ]
  },
  {
    "type": "container",
    "title": "Odoo",
    "description": "Open-source business apps",
    "categories": [
      "project-management"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/odoo.png",
    "image": "odoo:latest",
    "env": [
      {
        "name": "HOST",
        "label": "PostgreSQL database host",
        "type": "container"
      },
      {
        "name": "USER",
        "label": "Database user"
      },
      {
        "name": "PASSWORD",
        "label": "Database password"
      }
    ],
    "ports": [
      "8069/tcp"
    ],
    "volumes": [
      "/var/lib/odoo",
      "/mnt/extra-addons"
    ]
  },
  {
    "type": "container",
    "title": "Urbackup",
    "description": "Open-source network backup",
    "categories": [
      "backup"
    ],
    "platform": "linux",
    "note": "This application web interface is exposed on the port 55414 inside the container.",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/urbackup.png",
    "image": "cfstras/urbackup",
    "ports": [
      "55413/tcp",
      "55414/tcp",
      "55415/tcp",
      "35622/tcp"
    ],
    "volumes": [
      "/var/urbackup"
    ]
  },
  {
    "type": "container",
    "title": "File browser",
    "description": "A web file manager",
    "note": "Default credentials: admin/admin",
    "categories": [
      "filesystem",
      "storage"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/filebrowser.png",
    "image": "hacdias/filemanager:latest",
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/data",
      "/srv"
    ],
    "command": "--port 80 --database /data/database.db --scope /srv"
  },
  {
    "type": "container",
    "title": "CommandBox",
    "description": "ColdFusion (CFML) CLI",
    "categories": [
      "development"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
    "image": "ortussolutions/commandbox:latest",
    "env": [
      {
        "name": "CFENGINE",
        "set": "lucee@4.5"
      }
    ],
    "ports": [
      "8080/tcp",
      "8443/tcp"
    ]
  },
  {
    "type": "container",
    "title": "ContentBox",
    "description": "Open-source modular CMS",
    "categories": [
      "CMS"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
    "image": "ortussolutions/contentbox:latest",
    "env": [
      {
        "name": "express",
        "set": "true"
      },
      {
        "name": "install",
        "set": "true"
      },
      {
        "name": "CFENGINE",
        "set": "lucee@4.5"
      }
    ],
    "ports": [
      "8080/tcp",
      "8443/tcp"
    ],
    "volumes": [
      "/data/contentbox/db",
      "/app/includes/shared/media"
    ]
  },
  {
    "type": "stack",
    "title": "Portainer Agent",
    "description": "Manage all the resources in your Swarm cluster",
    "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
    "categories": [
      "portainer"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
    "repository": {
      "url": "https://github.com/portainer/templates",
      "stackfile": "stacks/portainer-agent/docker-stack.yml"
    }
  },
  {
    "type": "stack",
    "title": "OpenFaaS",
    "name": "func",
    "description": "Serverless functions made simple",
    "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
    "categories": [
      "serverless"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
    "repository": {
      "url": "https://github.com/openfaas/faas",
      "stackfile": "docker-compose.yml"
    }
  },
  {
    "type": "stack",
    "title": "IronFunctions",
    "description": "Open-source serverless computing platform",
    "note": "Deploys the IronFunctions API and UI.",
    "categories": [
      "serverless"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
    "repository": {
      "url": "https://github.com/portainer/templates",
      "stackfile": "stacks/ironfunctions/docker-stack.yml"
    }
  },
  {
    "type": "stack",
    "title": "CockroachDB",
    "description": "CockroachDB cluster",
    "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
    "categories": [
      "database"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
    "repository": {
      "url": "https://github.com/portainer/templates",
      "stackfile": "stacks/cockroachdb/docker-stack.yml"
    }
  },
  {
    "type": "stack",
    "title": "Wordpress",
    "description": "Wordpress setup with a MySQL database",
    "note": "Deploys a Wordpress instance connected to a MySQL database.",
    "categories": [
      "CMS"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
    "repository": {
      "url": "https://github.com/portainer/templates",
      "stackfile": "stacks/wordpress/docker-stack.yml"
    },
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "Database root password",
        "description": "Password used by the MySQL root user."
      }
    ]
  },
  {
    "type": "stack",
    "title": "Microsoft OMS Agent",
    "description": "Microsoft Operations Management Suite Linux agent.",
    "categories": [
      "OPS"
    ],
    "platform": "linux",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
    "repository": {
      "url": "https://github.com/portainer/templates",
      "stackfile": "stacks/microsoft-oms/docker-stack.yml"
    },
    "env": [
      {
        "name": "AZURE_WORKSPACE_ID",
        "label": "Workspace ID",
        "description": "Azure Workspace ID"
      },
      {
        "name": "AZURE_PRIMARY_KEY",
        "label": "Primary key",
        "description": "Azure primary key"
      }
    ]
  },
  {
    "title": "Sematext Docker Agent",
    "type": "stack",
    "categories": [
      "Log Management",
      "Monitoring"
    ],
    "description": "Collect logs, metrics and docker events",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
    "platform": "linux",
    "repository": {
      "url": "https://github.com/portainer/templates",
      "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
    },
    "env": [
      {
        "name": "LOGSENE_TOKEN",
        "label": "Logs token"
      },
      {
        "name": "SPM_TOKEN",
        "label": "SPM monitoring token"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ]
  },
  {
    "type": "container",
    "title": "htpcmanager",
    "description": "Htpcmanager, a front end for many htpc related applications. Hellowlol version.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/htpcmanager-icon.png",
    "image": "linuxserver/htpcmanager:latest",
    "category": [
      "MediaApp:Video",
      "MediaApp:Music",
      "MediaApp:Other"
    ],
    "ports": [
      "8085/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "jackett",
    "description": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.[",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jacket-icon.png",
    "image": "linuxserver/jackett:latest",
    "category": [
      "Downloaders:",
      "Tools:"
    ],
    "ports": [
      "9117/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "booksonic",
    "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic.png",
    "image": "linuxserver/booksonic:latest",
    "category": [
      "MediaApp:Books",
      "MediaApp:Other",
      "MediaServer:Books",
      "MediaServer:Other",
      "Status:Stable"
    ],
    "ports": [
      "4040/tcp"
    ],
    "volumes": [
      "/books",
      "/podcast",
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "CONTEXT_PATH",
        "label": "CONTEXT_PATH",
        "set": "booksonic"
      }
    ]
  },
  {
    "type": "container",
    "title": "smokeping",
    "description": null,
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/smokeping-icon.png",
    "image": "linuxserver/smokeping:latest",
    "category": [
      "Network:Management"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/config",
      "/data"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "duckdns",
    "description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes\r\n\r\n",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png",
    "image": "linuxserver/duckdns:latest",
    "category": [
      "Network:DNS",
      "Tools:"
    ],
    "volumes": [],
    "env": [
      {
        "name": "SUBDOMAINS",
        "label": "SUBDOMAINS",
        "set": ""
      },
      {
        "name": "TOKEN",
        "label": "TOKEN",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "webgrabplus",
    "description": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.[br]\r\n\t\tOptional postprocessors to add IMDb data or to customize your xmltv listing.[br]\r\n\t\thttp://www.webgrabplus.com/[br]\r\n\t\t[b][span style='color: #E80000;']Directions:[/span][/b][br]\r\n\t\t[b]/config[/b] : This is where WebGrab+Plus will store it's configuration.[br][br]\r\n\t\t[b]/data[/b] : This is where tv_grab_wg script in the Tvheadend container looks for the guide.xml file.[br][br]",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webgrabplus.png",
    "image": "linuxserver/webgrabplus:latest",
    "category": [
      "Downloaders:"
    ],
    "volumes": [
      "/config",
      "/data"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "domoticz",
    "description": "Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device",
    "logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
    "image": "linuxserver/domoticz:latest",
    "category": [
      "HomeAutomation:",
      "Network:Management"
    ],
    "ports": [
      "1443/tcp",
      "6144/tcp",
      "8080/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "transmission",
    "description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/transmission-icon.png",
    "image": "linuxserver/transmission:latest",
    "category": [
      "Downloaders:"
    ],
    "ports": [
      "9091/tcp",
      "51413/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/watch"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "libresonic",
    "description": "Libresonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.\r\n\r\n/music - Location of music.\r\n/media - Location of other media.\r\n/podcasts - Location of podcasts.\r\n/playlists - Location for playlists storage.\r\nCONTEXT_PATH for setting url-base in reverse proxy setups - (optional)\r\n\r\nDefault user/pass is admin/admin",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libresonic.png",
    "image": "linuxserver/libresonic:latest",
    "category": [
      "MediaApp:Music",
      "MediaServer:Music",
      "Status:Stable"
    ],
    "ports": [
      "4040/tcp"
    ],
    "volumes": [
      "/music",
      "/playlists",
      "/podcasts",
      "/media",
      "/config"
    ],
    "env": [
      {
        "name": "CONTEXT_PATH",
        "label": "CONTEXT_PATH",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "sickrage",
    "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickrage-icon.png",
    "image": "linuxserver/sickrage:latest",
    "category": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "ports": [
      "8081/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/tv"
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "musicbrainz",
    "description": " MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/musicbrainz-icon.png",
    "image": "linuxserver/musicbrainz:latest",
    "category": [
      "MediaApp:Music",
      "Other:",
      "Tools:"
    ],
    "ports": [
      "5000/tcp"
    ],
    "volumes": [
      "/config",
      "/data"
    ],
    "env": [
      {
        "name": "BRAINZCODE",
        "label": "BRAINZCODE",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "quassel-core",
    "description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core -- much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-core-icon.png",
    "image": "linuxserver/quassel-core:latest",
    "category": [
      "Network:Messenger"
    ],
    "ports": [
      "4242/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "photoshow",
    "description": "A simple, easy way to turn a photo album into a webgallery",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/photoshow-icon.png",
    "image": "linuxserver/photoshow:latest",
    "category": [
      "MediaServer:Photos"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/Pictures",
      "/Thumbs",
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "daapd",
    "description": "DAAP (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), MPD and internet radio.",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-icon.png",
    "image": "linuxserver/daapd:latest",
    "category": [
      "MediaApp:Music",
      "MediaServer:Music"
    ],
    "ports": [
      "/",
      "/"
    ],
    "volumes": [
      "/config",
      "/music"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "gazee",
    "description": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/gazee-logo.png",
    "image": "linuxserver/gazee:latest",
    "category": [
      "Network:Web",
      "MediaServer:Books",
      "Tools:"
    ],
    "volumes": [
      "/config",
      "/comics",
      "/mylar"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "codiad",
    "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.\n  ",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/codiad-icon.png",
    "image": "linuxserver/codiad:latest",
    "category": [
      "Productivity"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "oscam",
    "description": "OScam is a softcam, software to be used to decrypt digital television channels on a settopbox (receiver), as an alternative for a conditional access module\n  (CAM). OScam is, compared with other softcams (CCcam, mgcamd, etc.), open source. Hence, the name Open Source Conditional Access Module (OScam). OScam is based on the\n  not so well known softcam MpCS. The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
    "logo": "http://i.imgur.com/8LadrLg.png",
    "image": "linuxserver/oscam:latest",
    "category": [
      "MediaServer:Other"
    ],
    "ports": [
      "8888/tcp",
      "10000/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "kodi-headless",
    "description": "Headless installation of Kodi™ (formerly known as XBMC™), to enable library updates.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kodi-icon.png",
    "image": "linuxserver/kodi-headless:latest",
    "category": [
      "MediaServer:Video"
    ],
    "ports": [
      "8080/tcp",
      "9777/udp"
    ],
    "volumes": [
      "/config/.kodi"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "pydio",
    "description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pydio-icon.png",
    "image": "linuxserver/pydio:latest",
    "category": [
      "Cloud:",
      "Network:Other"
    ],
    "ports": [
      "443/tcp"
    ],
    "volumes": [
      "/config",
      "/data"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "sabnzbd",
    "description": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-icon.png",
    "image": "linuxserver/sabnzbd:latest",
    "category": [
      "Downloaders:"
    ],
    "ports": [
      "8080/tcp",
      "9090/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/incomplete-downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "medusa",
    "description": "Medusa, automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/medusa-icon.png",
    "image": "linuxserver/medusa:latest",
    "category": [
      "Downloaders:",
      "MediaApp:Video",
      "Status:Stable"
    ],
    "ports": [
      "8081/tcp"
    ],
    "volumes": [
      "/config",
      "/tv",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "heimdall",
    "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/heimdall-icon.png",
    "image": "linuxserver/heimdall:latest",
    "category": [
      "Tools:",
      "Network:Web",
      "Network:Other",
      "Status:Stable"
    ],
    "ports": [
      "80/tcp",
      "443/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "syncthing",
    "description": null,
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syncthing-icon.png",
    "image": "linuxserver/syncthing:latest",
    "category": [
      "Backup:",
      "Cloud:",
      "Network:Other",
      "Tools:"
    ],
    "ports": [
      "8384/tcp",
      "21027/udp",
      "22000/tcp"
    ],
    "volumes": [
      "/config",
      "/sync"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "muximux",
    "description": "A lightweight portal to view, manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/muximux-icon.png",
    "image": "linuxserver/muximux:latest",
    "category": [
      "Network:Web",
      "Network:Proxy",
      "Network:Other",
      "Tools:"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "beets",
    "description": "The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/beets-icon.png",
    "image": "linuxserver/beets:latest",
    "category": [
      "MediaApp:Music"
    ],
    "ports": [
      "8337/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/music"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "plexrequests",
    "description": "Simple automated way for users to request new content for Plex.",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
    "image": "linuxserver/plexrequests:latest",
    "category": [
      "Downloaders:",
      "Network:Other",
      "MediaApp:Video",
      "Tools:"
    ],
    "ports": [
      "3000/tcp",
      "/"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "URL_BASE",
        "label": "URL_BASE",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "mariadb",
    "description": "An Enhanced drop in replacement for Mysql",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-icon.png",
    "image": "linuxserver/mariadb:latest",
    "category": [
      "Network:Other",
      "MediaApp:Other",
      "Other:",
      "Tools:"
    ],
    "ports": [
      "3306/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "MYSQL_ROOT_PASSWORD",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "znc",
    "description": "ZNC is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/znc-icon.png",
    "image": "linuxserver/znc:latest",
    "category": [
      "Network:Messenger"
    ],
    "ports": [
      "6501/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "cops",
    "description": "COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-icon.png",
    "image": "linuxserver/cops:latest",
    "category": [
      "Cloud:",
      "MediaApp:Books",
      "MediaServer:Books"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/books",
      "/config"
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "thelounge",
    "description": "A self-hosted web IRC client",
    "logo": "https://raw.githubusercontent.com/linuxserver/community-templates/master/lsiocommunity/img/shout-icon.png",
    "image": "linuxserver/thelounge:latest",
    "category": [
      "Network:Messenger"
    ],
    "ports": [
      "9000/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "nzbget",
    "description": "NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources. It supports all platforms including Windows, Mac, Linux and works on all devices including PC, NAS, WLAN routers and media players",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nzbget-icon.png",
    "image": "linuxserver/nzbget:latest",
    "category": [
      "Downloaders:"
    ],
    "ports": [
      "6789/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "ombi",
    "description": "Ombi allows you to host your own Plex Request and user management system. ",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ombi.png",
    "image": "linuxserver/ombi:latest",
    "category": [
      "Downloaders:",
      "Network:Other",
      "MediaApp:Video",
      "Tools:"
    ],
    "ports": [
      "3579/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "lychee",
    "description": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png",
    "image": "linuxserver/lychee:latest",
    "category": [
      "Cloud:",
      "Network:Web",
      "Network:Management",
      "MediaApp:Photos",
      "MediaServer:Photos"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/config",
      "/pictures"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "deluge",
    "description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/deluge-icon.png",
    "image": "linuxserver/deluge:latest",
    "category": [
      "Downloaders:"
    ],
    "volumes": [
      "/config",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "UMASK_SET",
        "label": "UMASK_SET",
        "set": "000"
      }
    ]
  },
  {
    "type": "container",
    "title": "nginx",
    "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nginx-icon.png",
    "image": "linuxserver/nginx:latest",
    "category": [
      "Network:Web",
      "Network:Proxy"
    ],
    "ports": [
      "80/tcp",
      "443/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "lidarr",
    "description": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lidarr.png",
    "image": "linuxserver/lidarr:latest",
    "category": [
      "Downloaders:",
      "MediaApp:Music",
      "Status:Beta"
    ],
    "ports": [
      "8686/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/music"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "cardigann",
    "description": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cardigann.png",
    "image": "linuxserver/cardigann:latest",
    "category": [
      "Downloaders:"
    ],
    "ports": [
      "5060/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "unifi",
    "description": null,
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-icon.png",
    "image": "linuxserver/unifi:latest",
    "category": [
      "Network:Management",
      "Tools:"
    ],
    "ports": [
      "3478/udp",
      "10001/udp",
      "8080/tcp",
      "8081/tcp",
      "8443/tcp",
      "8843/tcp",
      "8880/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "calibre-web",
    "description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.\n\n  [br][br]\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\n  [b]/config[/b] Where Calibre-web should store it's database[br]\n  [b]/books[/b] Path to your calibre library metadata.db file[br]",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-web-icon.png",
    "image": "linuxserver/calibre-web:latest",
    "category": [
      "Cloud:",
      "MediaApp:Books",
      "MediaServer:Books"
    ],
    "ports": [
      "8083/tcp"
    ],
    "volumes": [
      "/books",
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "plex",
    "description": null,
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-icon.png",
    "image": "linuxserver/plex:latest",
    "category": [
      "MediaServer:Video",
      "MediaServer:Music",
      "MediaServer:Photos"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "VERSION",
        "label": "VERSION",
        "set": "latest"
      }
    ]
  },
  {
    "type": "container",
    "title": "hydra",
    "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png",
    "image": "linuxserver/hydra:latest",
    "category": [
      "Downloaders:",
      "MediaApp:Other",
      "Tools:"
    ],
    "ports": [
      "5075/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "headphones",
    "description": null,
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/headphones-icon.png",
    "image": "linuxserver/headphones:latest",
    "category": [
      "MediaServer:Music"
    ],
    "ports": [
      "8181/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/music"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "qbittorrent",
    "description": "The qBittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qbittorrent-icon.png",
    "image": "linuxserver/qbittorrent:latest",
    "category": [
      "Downloaders:"
    ],
    "ports": [
      "6881/tcp",
      "6881/udp",
      "8080/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "couchpotato",
    "description": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/couchpotato-icon.png",
    "image": "linuxserver/couchpotato:latest",
    "category": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "ports": [
      "5050/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/movies"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "davos",
    "description": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\r\n\r\n/config : AppData Location\r\n/download : File Download Location",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/davos.png",
    "image": "linuxserver/davos:latest",
    "category": [
      "Network:FTP",
      "Network:Other",
      "Tools:"
    ],
    "ports": [
      "8080/tcp"
    ],
    "volumes": [
      "/config",
      "/download"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "tt-rss",
    "description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tt-rss-icon.png",
    "image": "linuxserver/tt-rss:latest",
    "category": [
      "Network:Other"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "freshrss",
    "description": "A free, self-hostable rss aggregator…",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freshrss-icon.png",
    "image": "linuxserver/freshrss:latest",
    "category": [
      "Network:Other",
      "Other:"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "mcmyadmin2",
    "description": null,
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mcmyadmin-icon.png",
    "image": "linuxserver/mcmyadmin2:latest",
    "category": [
      "Network:Other",
      "Other:"
    ],
    "ports": [
      "8080/tcp",
      "25565/tcp"
    ],
    "volumes": [
      "/minecraft"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "openvpn-as",
    "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvpn-as-icon.png",
    "image": "linuxserver/openvpn-as:latest",
    "category": [
      "Network:Other"
    ],
    "ports": [
      "943/tcp",
      "9443/tcp",
      "1194/udp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "mylar",
    "description": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
    "image": "linuxserver/mylar:latest",
    "category": [
      "Downloaders:",
      "MediaApp:Books"
    ],
    "ports": [
      "8090/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/comics"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "organizr",
    "description": "HTPC/Homelab Services Organizer - Written in PHP",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/organizr-icon.png",
    "image": "linuxserver/organizr:latest",
    "category": [
      "Tools:",
      "Network:Web",
      "Network:Proxy",
      "Network:Other"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "hydra2",
    "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png",
    "image": "linuxserver/hydra2:latest",
    "category": [
      "Downloaders:",
      "MediaApp:Other",
      "Tools:"
    ],
    "ports": [
      "5076/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "projectsend",
    "description": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files!\n  ",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/projectsend-logo.png",
    "image": "linuxserver/projectsend:latest",
    "category": [
      "Cloud:",
      "Productivity:",
      "Tools:",
      "Network:Other",
      "Status:Stable"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/data",
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "minetest",
    "description": "Server version of minetest, a free, open source alternative to minecraft.",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
    "image": "linuxserver/minetest:latest",
    "category": [
      "Network:Other",
      "Other:",
      "GameServers:"
    ],
    "ports": [
      "30000/udp"
    ],
    "volumes": [
      "/config/.minetest"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "tvheadend",
    "description": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT&gt;IP and HDHomeRun as input sources.\r\nTvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT&gt;IP streaming.\r\nMultiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
    "logo": "http://i.imgur.com/zGSUAT4.png",
    "image": "linuxserver/tvheadend:latest",
    "category": [
      "MediaServer:Video",
      "MediaServer:Other"
    ],
    "ports": [
      "9981/tcp",
      "9982/tcp"
    ],
    "volumes": [
      "/config",
      "/recordings"
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "duplicati",
    "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duplicati-icon.png",
    "image": "linuxserver/duplicati:latest",
    "category": [
      "Backup:",
      "Cloud:",
      "Network:Other",
      "Productivity:",
      "Tools:"
    ],
    "ports": [
      "8200/tcp"
    ],
    "volumes": [
      "/config",
      "/tmp",
      "/backups",
      "/source"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "resilio-sync",
    "description": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/resilio.png",
    "image": "linuxserver/resilio-sync:latest",
    "category": [
      "Backup:",
      "Cloud:",
      "Network:Other",
      "Tools:"
    ],
    "ports": [
      "8888/tcp",
      "55555/tcp"
    ],
    "volumes": [
      "/config",
      "/sync",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "radarr",
    "description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png",
    "image": "linuxserver/radarr:latest",
    "category": [
      "Downloaders:",
      "MediaApp:Video",
      "Status:Beta"
    ],
    "ports": [
      "7878/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/movies"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "piwigo",
    "description": "Piwigo is photo gallery software for the web, built by an active community of users and developers.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piwigo-icon.png",
    "image": "linuxserver/piwigo:latest",
    "category": [
      "MediaServer:Photos"
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "ubooquity",
    "description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ubooquity-icon.png",
    "image": "linuxserver/ubooquity:latest",
    "category": [
      "Cloud:",
      "MediaApp:Books",
      "MediaServer:Books"
    ],
    "ports": [
      "2202/tcp",
      "2203/tcp"
    ],
    "volumes": [
      "/books",
      "/comics",
      "/config"
    ],
    "env": [
      {
        "name": "MAXMEM",
        "label": "MAXMEM",
        "set": "512"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "lazylibrarian",
    "description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lazylibrarian-icon.png",
    "image": "linuxserver/lazylibrarian:latest",
    "category": [
      "MediaApp:Books"
    ],
    "ports": [
      "5299/tcp"
    ],
    "volumes": [
      "/config",
      "/downloads",
      "/books"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "airsonic",
    "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-logo.png",
    "image": "linuxserver/airsonic:latest",
    "category": [
      "MediaApp:Music",
      "MediaServer:Music",
      "Status:Stable"
    ],
    "ports": [
      "4040/tcp"
    ],
    "volumes": [
      "/music",
      "/playlists",
      "/podcasts",
      "/media",
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "CONTEXT_PATH",
        "label": "CONTEXT_PATH",
        "set": "airsonic"
      },
      {
        "name": "JAVA_OPTS",
        "label": "JAVA_OPTS",
        "set": "-Xms256m -Xmx512m"
      }
    ]
  },
  {
    "type": "container",
    "title": "letsencrypt",
    "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/letsencrypt.png",
    "image": "linuxserver/letsencrypt:latest",
    "category": [
      "Tools:",
      "Network:Web",
      "Status:Stable"
    ],
    "ports": [
      "80/tcp",
      "443/tcp"
    ],
    "volumes": [
      "/config"
    ],
    "env": [
      {
        "name": "EMAIL",
        "label": "EMAIL",
        "set": "-Xms256m -Xmx512m"
      },
      {
        "name": "URL",
        "label": "URL",
        "set": "-Xms256m -Xmx512m"
      },
      {
        "name": "SUBDOMAINS",
        "label": "SUBDOMAINS",
        "set": "www,"
      },
      {
        "name": "ONLY_SUBDOMAINS",
        "label": "ONLY_SUBDOMAINS",
        "set": "false"
      },
      {
        "name": "DHLEVEL",
        "label": "DHLEVEL",
        "set": "2048"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      },
      {
        "name": "VALIDATION",
        "label": "VALIDATION",
        "set": "http"
      },
      {
        "name": "DNSPLUGIN",
        "label": "DNSPLUGIN",
        "set": "http"
      }
    ]
  },
  {
    "type": "container",
    "title": "sonarr",
    "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-icon.png",
    "image": "linuxserver/sonarr:latest",
    "category": [
      "Downloaders:",
      "MediaApp:Video"
    ],
    "ports": [
      "8989/tcp"
    ],
    "volumes": [
      "/config",
      "/dev/rtc",
      "/tv",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "tautulli",
    "description": "Tautulli is a 3rd party application that you can run along side your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.[br][br]\r\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\r\n  [b]8181[/b] The webui for Tautulli's webui [br]\r\n  [b]/config[/b] Storing Configuration and the Tautulli database[br]\r\n[b]/logs[/b] Map to you plex logs (required for IP logging)[br]\r\n\r\n",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tautulli-icon.png",
    "image": "linuxserver/tautulli:latest",
    "category": [
      "MediaServer:Other",
      "Tools:"
    ],
    "ports": [
      "8181/tcp"
    ],
    "volumes": [
      "/logs",
      "/config"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "rutorrent",
    "description": "Popular torrent client with a webui for ease of use.",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
    "image": "linuxserver/rutorrent:latest",
    "category": [
      "Downloaders:"
    ],
    "ports": [
      "80/tcp",
      "51413/tcp",
      "6881/udp"
    ],
    "volumes": [
      "/config",
      "/downloads"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "nextcloud",
    "description": "Nextcloud is an open source, self-hosted file sync and communication app platform. Access and sync your files, contacts, calendars and communicate and collaborate across your devices. You decide what happens with your data, where it is and who can access it!",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png",
    "image": "linuxserver/nextcloud:latest",
    "category": [
      "Cloud:",
      "Productivity:",
      "Tools:",
      "MediaServer:Other",
      "Network:Web",
      "Status:Stable"
    ],
    "ports": [
      "443/tcp"
    ],
    "volumes": [
      "/config",
      "/data"
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "minisatip",
    "description": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.\n\n  The application is designed to stream the requested data to multiple clients (even with one dvb card) at the same time while opening different pids.\n  ",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minisatip-icon.png",
    "image": "linuxserver/minisatip:latest",
    "category": [
      "MediaServer:Video",
      "MediaServer:Other",
      "Other:",
      "Tools:"
    ],
    "ports": [
      "8875/tcp",
      "554/tcp",
      "1900/udp"
    ],
    "volumes": [],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "set": ""
      },
      {
        "name": "PGID",
        "label": "PGID",
        "set": ""
      }
    ]
  },
  {
    "type": "container",
    "title": "Terraria Server - tshock",
    "description": "Docker image to run a Terraria Server via tshock",
    "categories": [
      "games"
    ],
    "platform": "linux",
    "logo": "https://portainer.io/images/logos/registry.png",
    "image": "beardedio/terraria:latest",
    "ports": [
      "7777/tcp"
    ],
    "volumes": [
      "/config"
    ]
  }
]
